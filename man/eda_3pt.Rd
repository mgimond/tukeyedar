% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_3pt.R
\name{eda_3pt}
\alias{eda_3pt}
\title{3-point summary plot}
\usage{
eda_3pt(
  dat,
  x,
  y,
  x.lab = NULL,
  y.lab = NULL,
  adj = -0.12,
  dir = TRUE,
  pch = 20,
  col = "grey40",
  ...
)
}
\arguments{
\item{dat}{data frame}

\item{x}{column name assigned the x axis}

\item{y}{column name assigned the y axis}

\item{x.lab}{X label for output plot}

\item{y.lab}{Y label for output plot}

\item{adj}{Adjustment parameter for y label}

\item{dir}{boolean indicating if suggested ladder of power direction should
be displayed}

\item{pch}{Plot point size as a fraction (can be larger than 1.0)}

\item{col}{Plot point color}

\item{...}{other parameters passed to the graphics::plot function.}
}
\description{
\code{eda_3pt} splits the data into 3 groups (whose summary locations are
 defined by their respective medians) and two half slopes linking the groups.
 The function will return a scatter plot showing the half-slopes in red
 dashed lines. The solid grey slope linking both tail-end groups shows the
 desired shape for both half-slopes. The function will also return the
 half-slopes ratio '\code{hsrtio} and the direction of re-expression
 for both X and Y values on the ladder of powers.
}
\details{
Outputs a plot showing the three point summary as well as a list of
parameters:
\itemize{
  \item \code{hsrtio}: The ratio between both slopes. A value close to one
  suggests that no transformation is needed.
  \item \code{xmed}: The x-coordinate values for the three summary points.
  \item \code{ymed}: The y-coordinate values for the three summary points.}

\emph{References:
  \itemize{
   \item Applications, Basics and Computing of Exploratory Data Analysis,
   by P.F. Velleman and D.C. Hoaglin
   \item Understanding robust and exploratory data analysis, by D.C. Hoaglin,
   F. Mosteller and J.W. Tukey
   \item Exploratory Data Analysis, by John Tukey}}
}
\examples{

hsratio <- eda_3pt(cars, speed, dist)
hsratio <- eda_3pt(cars, speed, dist^(1/3), y.lab=expression("Dist"^{1/3}), adj=-0.1)
}
