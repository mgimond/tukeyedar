% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_theo.R
\name{eda_theo}
\alias{eda_theo}
\title{Theoretical QQ plot}
\usage{
eda_theo(
  x,
  p = 1L,
  tukey = FALSE,
  q.type = 5,
  dist = "norm",
  dist.l = list(),
  resid = FALSE,
  stat = mean,
  plot = TRUE,
  show.par = TRUE,
  grey = 0.6,
  pch = 21,
  p.col = "grey50",
  p.fill = "grey80",
  size = 1,
  alpha = 0.8,
  med = TRUE,
  q = FALSE,
  iqr = TRUE,
  grid = FALSE,
  tails = FALSE,
  inner = 0.75,
  tail.pch = 21,
  tail.p.col = "grey70",
  tail.p.fill = NULL,
  xlab = NULL,
  ylab = NULL,
  title = NULL,
  t.size = 1.2,
  ...
)
}
\arguments{
\item{x}{Vector of continuous values.}

\item{p}{Power transformation to apply to \code{x}.}

\item{tukey}{Boolean determining if a Tukey transformation should be adopted
(FALSE adopts a Box-Cox transformation).}

\item{q.type}{An integer between 4 and 9 selecting one of the nine quantile
algorithms. (See the \code{\link[tukeyedar]{eda_fval}} function).}

\item{dist}{Choice of theoretical distribution.}

\item{dist.l}{List of parameters passed to the distribution quantile function.}

\item{resid}{Boolean determining if residuals should be plotted. Residuals
are computed using the \code{stat} parameter.}

\item{stat}{Statistic to use if residuals are to be computed. Currently
\code{mean} (default) or \code{median}.}

\item{plot}{Boolean determining if plot should be generated.}

\item{show.par}{Boolean determining if parameters such as power
transformation or formula should be displayed.}

\item{grey}{Grey level to apply to plot elements (0 to 1 with 1 = black).}

\item{pch}{Point symbol type.}

\item{p.col}{Color for point symbol.}

\item{p.fill}{Point fill color passed to \code{bg} (Only used for \code{pch}
ranging from 21-25).}

\item{size}{Point size (0-1)}

\item{alpha}{Point transparency (0 = transparent, 1 = opaque). Only
applicable if \code{rgb()} is not used to define point colors.}

\item{med}{Boolean determining if median lines should be drawn.}

\item{q}{Boolean determining if \code{inner} data region should be shaded.}

\item{iqr}{Boolean determining if an IQR line should be fitted to the points.}

\item{grid}{Boolean determining if a grid should be added.}

\item{tails}{Boolean determining if points outside of the \code{inner} region
should be symbolized differently. Tail-end points are symbolized via the
\code{tail.pch},  \code{tail.p.col} and \code{tail.p.fill} arguments.}

\item{inner}{Fraction of the data considered as "mid values". Defaults to
75\\%. Used  to define shaded region boundaries, \code{q}, or to identify
which of the tail-end points are to be symbolized differently, \code{tails}.}

\item{tail.pch}{Tail-end point symbol type (See \code{tails}).}

\item{tail.p.col}{Tail-end color for point symbol (See \code{tails}).}

\item{tail.p.fill}{Tail-end point fill color passed to \code{bg}
(Only used for \code{tail.pch} ranging from 21-25).}

\item{xlab}{X label for output plot.}

\item{ylab}{Y label for output plot.}

\item{title}{Title to add to plot.}

\item{t.size}{Title size.}

\item{...}{Not used}
}
\value{
A dataframe with the input vector elements and matching theoretical
quantiles. Any transformation applied to \code{x} is reflected in the
output.
}
\description{
\code{eda_theo} generates a theoretical QQ plot for many common
distributions including the Normal, uniform and gamma distributions.
}
\details{
The function generates a theoretical QQ plot.
Currently, only the Normal QQ plot (\code{dist="norm"}), exponential
QQ plot (\code{dist="exp"}), uniform QQ plot (\code{dist="unif"}),
gamma QQ plot (\code{dist="gamma"}), chi-squared QQ plot
(\code{dist="chisq"}), and the Weibull QQ plot (\code{dist="weibull"}) are
supported. By default, the Normal QQ plot maps the unit Normal
quantiles to the x-axis (i.e. centered on a mean of 0 and standard deviation
of 1 unit). \cr \cr
Note that arguments can be passed to the respective quantile functions via
the \code{d.list} argument. Some quantile functions require at least one
argument. For example, the \code{qgamma} function requires that the shape
parameter be specified and the \code{qchisq} function requires that  the
degrees of freedom, \code{df}, be specified. See examples.
}
\examples{

 singer <- lattice::singer
 bass2 <- subset(singer, voice.part == "Bass 2", select = height, drop = TRUE )

 # Generate a normal QQ plot
 eda_theo(bass2)

 # Generate a chi-squared QQ plot. The distribution requires that the degrees
 # of freedom be specified. The inner 70\% shaded region is added.
 set.seed(270); x <- rchisq(100, df =3)
 eda_theo(x, dist = "chisq", dist.l = list(df = 3), q = TRUE)

 # Generate a gamma QQ plot. Note that gamma requires at the very least the
 # shape parameter. The chi-squared distribution is a special case of the
 # gamma distribution where shape = df/2 and rate = 1/2.
 eda_theo(x, dist = "gamma", dist.l = list(shape = 3/2, rate = 1/2), q = TRUE)

 # Generate a uniform QQ plot
 eda_theo(bass2, dist = "unif")

 # The uniform QQ plot can double as a quantile plot
 eda_theo(bass2, dist = "unif", q = FALSE, med = FALSE,
          iqr = FALSE, grid = TRUE, xlab = "f-value")
}
\references{
\itemize{
\item John M. Chambers, William S. Cleveland, Beat Kleiner, Paul A. Tukey.
Graphical Methods for Data Analysis (1983)
\item \href{../articles/qq.html}{Quantile-Quantile plot article}}
}
