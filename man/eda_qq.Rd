% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_qq.R
\name{eda_qq}
\alias{eda_qq}
\title{Quantile-Quantile plot, mean-difference Tukey plot, and symmetry QQ
plot}
\usage{
eda_qq(
  x,
  y = NULL,
  fac = NULL,
  norm = FALSE,
  sym = FALSE,
  p = 1L,
  tukey = FALSE,
  md = FALSE,
  q.type = 5,
  fx = NULL,
  fy = NULL,
  plot = TRUE,
  show.par = TRUE,
  grey = 0.6,
  pch = 21,
  p.col = "grey50",
  p.fill = "grey80",
  size = 0.8,
  alpha = 0.8,
  q = TRUE,
  b.val = c(0.25, 0.75),
  l.val = c(0.125, 0.875),
  switch = FALSE,
  xlab = NULL,
  ylab = NULL,
  title = NULL,
  t.size = 1.2,
  ...
)
}
\arguments{
\item{x}{Vector for first variable or a dataframe.}

\item{y}{Vector for second variable or column defining the continuous
variable if \code{x} is a dataframe.}

\item{fac}{Column defining the grouping variable if \code{x} is a dataframe.}

\item{norm}{Boolean determining if a Normal QQ plot is to be generated.}

\item{sym}{Boolean determining if a symmetry QQ plot is to be generated.}

\item{p}{Power transformation to apply to both sets of values.}

\item{tukey}{Boolean determining if a Tukey transformation should be adopted
(FALSE adopts a Box-Cox transformation).}

\item{md}{Boolean determining if Tukey mean-difference plot should be
generated.}

\item{q.type}{An integer between 1 and 9 selecting one of the nine quantile
algorithms. (See \code{quantile}tile function).}

\item{fx}{Formula to apply to x variable. This is computed after any
transformation is applied to the x variable.}

\item{fy}{Formula to apply to y variable. This is computed after any
transformation is applied to the y variable.}

\item{plot}{Boolean determining if plot should be generated.}

\item{show.par}{Boolean determining if parameters such as power
transformation or formula should be displayed.}

\item{grey}{Grey level to apply to plot elements (0 to 1 with 1 = black).}

\item{pch}{Point symbol type.}

\item{p.col}{Color for point symbol.}

\item{p.fill}{Point fill color passed to \code{bg} (Only used for \code{pch}
ranging from 21-25).}

\item{size}{Point size (0-1)}

\item{alpha}{Point transparency (0 = transparent, 1 = opaque). Only
applicable if \code{rgb()} is not used to define point colors.}

\item{q}{Boolean determining if grey quantile boxes should be plotted.}

\item{b.val}{Quantiles to define the quantile box parameters. Defaults to the
IQR. Two values are needed.}

\item{l.val}{Quantiles to define the quantile line parameters. Defaults to
the mid 75\% of values. Two values are needed.}

\item{switch}{Boolean determining if the axes should be swapped. Only applies
to dataframe input. Ignored if vectors are passed to the function.}

\item{xlab}{X label for output plot. Ignored if \code{x} is a dataframe.}

\item{ylab}{Y label for output plot. Ignored if \code{x} is a dataframe.}

\item{title}{Title to add to plot.}

\item{t.size}{Title size.}

\item{...}{Not used}
}
\value{
Returns a list with the following components:

\itemize{
  \item \code{data}: Dataframe with input \code{x} and \code{y} values.
  May be interpolated to smallest quantile batch.
  Values will reflect power transformation defined in \code{p}.
  \item \code{p}: Re-expression applied to original values.
  \item \code{fx}: Formula applied to x variable.
  \item \code{fy}: Formula applied to y variable.}
}
\description{
\code{eda_qq} Generates an empirical or Normal QQ plot as well
as a Tukey mean-difference plot. Can also be used to generate a symmetry QQ
plot.
}
\details{
When the function is used to generate an empirical QQ plot, the plot
  will displays the IQR via grey boxes for both x and y values. The box
  widths can be changed via the  \code{b.val} argument. The plot will also
  display the mid 75\% of values via light colored dashed lines. The line
  positions can be changed via the \code{l.val} argument. The middle dashed
  line represents each batch's median value. Console output prints the
  suggested multiplicative and additive offsets. See the QQ plot vignette for
  an introduction on its use and interpretation.\cr
  \cr
  The function can generate a Normal QQ plot when the
  \code{norm} argument is set to  \code{TRUE}. In such a case, the line
  parameters \code{l.val} are overridden and are set to +/- 1 standard
  deviations. Note that the "suggested offsets" output is disabled, nor
  can you generate an M-D version of the Normal QQ plot. Also note
  that the formula argument is ignored in this mode.cr
  \cr
  The function can be used to generate a symmetry QQ plot when the
  \code{sym} argument is set to  \code{TRUE}. This plot helps assess the
  symmetry of a variable by splitting it into two halves, upper and lower,
  using the batch's median as the cutoff point. The values for each half are
  the distances of each observation to the medina value in \code{x}'s units.
  The distance starts at 0 in the bottom-left corner of the plot. The grey
  box width, \code{b.val} and outer quantile line, \code{l.val}, will be
  measure from the origin given that the batch's center of mass is at 0.
  Power transformations can be applied to \code{x} but any formulas passed
  via \code{fx} or \code{fy} are ignored. This plot is inspired from the
  symmetry plot described by Chambers et al. in section 2.8 of their book
  (see reference).
}
\examples{

# Passing data as a dataframe
 singer <- lattice::singer
 dat <- singer[singer$voice.part  \%in\% c("Bass 2", "Tenor 1"), ]
 eda_qq(dat, height, voice.part)

# Passing data as two separate vector objects
 bass2 <- subset(singer, voice.part == "Bass 2", select = height, drop = TRUE )
 tenor1 <- subset(singer, voice.part == "Tenor 1", select = height, drop = TRUE )

 eda_qq(bass2, tenor1)

 # There seems to be an additive offset of about 2 inches
 eda_qq(bass2, tenor1, fx = "x - 2")

 # We can fine-tune by generating the Tukey mean-difference plot
 eda_qq(bass2, tenor1, fx = "x - 2", md = TRUE)

 # An offset of another 0.5 inches seems warranted
 # We can sat that overall, bass2 singers are 2.5 inches taller than  tenor1.
 # The offset is additive.
 eda_qq(bass2, tenor1, fx = "x - 2.5", md = TRUE)

 # Example 2: Sepal width
 setosa <- subset(iris, Species == "setosa", select = Petal.Width, drop = TRUE)
 virginica <- subset(iris, Species == "virginica", select = Petal.Width, drop = TRUE)

 eda_qq(setosa, virginica)

 # The points are not completely parallel to the  1:1 line suggesting a
 # multiplicative offset. The slope may be difficult to eyeball. The function
 # outputs a suggested slope and intercept. We can start with that
 eda_qq(setosa, virginica, fx = "x *  1.7143")

 # Now let's add the suggested additive offset.
 eda_qq(setosa, virginica, fx = "x *  1.7143  + 1.6286")

 # We can confirm this value via the mean-difference plot
 # Overall, we have both a multiplicative and additive offset between the
 # species' petal widths.
 eda_qq(setosa, virginica, fx = "x *  1.7143 + 1.6286", md = TRUE)

 # Function can generate a Normal QQ plot
 eda_qq(bass2, norm = TRUE)

 # Function can also generate a symmetry QQ plot
 eda_qq(tenor1, sym = TRUE)
}
\references{
\itemize{
  \item John M. Chambers, William S. Cleveland, Beat Kleiner, Paul A. Tukey.
  Graphical Methods for Data Analysis (1983)}
}
