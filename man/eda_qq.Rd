% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_qq.R
\name{eda_qq}
\alias{eda_qq}
\title{Generates empirical QQ plot and Tukey mean-difference plot}
\usage{
eda_qq(
  x,
  y,
  px = 1,
  py = 1,
  q.type = 5,
  tukey = FALSE,
  md = FALSE,
  plot = TRUE,
  grey = 0.6,
  pch = 21,
  p.col = "grey50",
  p.fill = "grey80",
  size = 0.8,
  alpha = 0.8,
  q = TRUE,
  q.val = c(0.25, 0.75),
  xlab = NULL,
  ylab = NULL,
  ...
)
}
\arguments{
\item{x}{Column assigned to the x axis.}

\item{y}{Column assigned to the y axis.}

\item{px}{Power transformation to apply to the x-variable.}

\item{py}{Power transformation to apply to the y-variable.}

\item{q.type}{Quantile type. Defaults to 5 (Cleveland's f-quantile
definition)}

\item{tukey}{Boolean determining if a Tukey transformation should be adopted
(FALSE adopts a Box-Cox transformation).}

\item{md}{Boolean determining if Tukey mean-difference plot should be
generated.}

\item{plot}{Boolean determining if plot should be generated.}

\item{grey}{Grey level to apply to plot elements (0 to 1 with 1 = black).}

\item{pch}{Point symbol type.}

\item{p.col}{Color for point symbol.}

\item{p.fill}{Point fill color passed to \code{bg} (Only used for \code{pch}
ranging from 21-25).}

\item{size}{Point size (0-1)}

\item{alpha}{Point transparency (0 = transparent, 1 = opaque). Only
applicable if \code{rgb()} is not used to define point colors.}

\item{q}{Boolean determining if grey quantile boxes should be plotted}

\item{q.val}{F-values to use to define the quantile box parameters. Defaults
to mid 68% of values. If more than 2 f-values are defined, the first two
are used to generate the box.}

\item{xlab}{X label for output plot}

\item{ylab}{Y label for output plot}

\item{...}{Not used}
}
\description{
\code{eda_qq} generates an empirical QQ plot or a Tukey
  mean-difference plot
}
\examples{

# Compare "Tenor 1" and "Bass 2" singer height batches
 singer <- lattice::singer
 bass2 <- subset(singer, voice.part == "Bass 2", select = height, drop = TRUE )
 tenor1 <- subset(singer, voice.part == "Tenor 1", select = height, drop = TRUE )
 eda_qq(bass2, tenor1, xlab="bass 2", ylab="tenor 1")

 # There seems to be an additive offset of about 2 inches
 eda_qq(tenor1, bass2 - 2,  xlab="bass 2", ylab="tenor 1")

 # We can fine-tune by generating the Tukey mean-difference plot
 eda_qq(tenor1, bass2 - 2, xlab="bass 2", ylab="tenor 1", md = TRUE)

 # An offset of another 0.5 inches seems warranted
 eda_qq(tenor1, bass2 - 2.5, xlab="bass 2", ylab="tenor 1", md = TRUE)

 # We can also apply the offset to the x variable
 eda_qq(tenor1 + 2.5, bass2, xlab="bass 2", ylab="tenor 1", md = TRUE)

 # Suppress plot and output values to object
 out <- eda_qq(tenor1, bass2, plot = FALSE)
}
