% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_lm.R
\name{eda_lm}
\alias{eda_lm}
\title{Regression plot (with optional LOESS fit)}
\usage{
eda_lm(
  dat,
  x,
  y,
  xlab = NULL,
  ylab = NULL,
  px = 1,
  py = 1,
  tukey = FALSE,
  show.par = TRUE,
  reg = TRUE,
  poly = 1,
  robust = FALSE,
  w = NULL,
  sd = TRUE,
  mean.l = TRUE,
  asp = TRUE,
  grey = 0.6,
  pch = 21,
  p.col = "grey50",
  p.fill = "grey80",
  size = 0.8,
  alpha = 0.8,
  q = FALSE,
  inner = 0.68,
  q.type = 5,
  loe = FALSE,
  lm.col = rgb(1, 0.5, 0.5, 0.8),
  loe.col = rgb(0.3, 0.3, 1, 1),
  stats = FALSE,
  stat.size = 0.8,
  loess.d = list(family = "symmetric", span = 0.7, degree = 1),
  rlm.d = list(psi = "psi.bisquare"),
  ...
)
}
\arguments{
\item{dat}{Dataframe.}

\item{x}{Column assigned to the x axis.}

\item{y}{Column assigned to the y axis.}

\item{xlab}{X label for output plot.}

\item{ylab}{Y label for output plot.}

\item{px}{Power transformation to apply to the x-variable.}

\item{py}{Power transformation to apply to the y-variable.}

\item{tukey}{Boolean determining if a Tukey transformation should be adopted
(FALSE adopts a Box-Cox transformation).}

\item{show.par}{Boolean determining if power transformation should be
displayed in the plot.}

\item{reg}{Boolean indicating whether a least squares regression line should
be plotted.}

\item{poly}{Polynomial order.}

\item{robust}{Boolean indicating if robust regression should be used.}

\item{w}{Weight to pass to regression model.}

\item{sd}{Boolean determining if standard deviation lines should be plotted.}

\item{mean.l}{Boolean determining if the x and y mean lines should be added
to the plot.}

\item{asp}{Boolean determining if the plot aspect ratio should equal the
ratio of the x and y standard deviations. A value of \code{FALSE} defaults
to the base plot's default aspect ratio. A value of \code{TRUE} uses the
aspect ratio \code{sd(x)/sd(y)}.}

\item{grey}{Grey level to apply to plot elements (0 to 1 with 1 = black).}

\item{pch}{Point symbol type.}

\item{p.col}{Color for point symbol.}

\item{p.fill}{Point fill color passed to \code{bg} (Only used for \code{pch}
ranging from 21-25).}

\item{size}{Point size (0-1).}

\item{alpha}{Point transparency (0 = transparent, 1 = opaque). Only
applicable if \code{rgb()} is not used to define point colors.}

\item{q}{Boolean determining if shaded region showing the mid-portion of the
data should be added to the plot.}

\item{inner}{Fraction of mid-values to highlight in \code{q}.  Defaults to
the mid 68 percent of values.}

\item{q.type}{Quantile type. Defaults to 5 (Cleveland's f-quantile
definition).}

\item{loe}{Boolean indicating if a loess curve should be fitted.}

\item{lm.col}{Regression line color.}

\item{loe.col}{LOESS curve color.}

\item{stats}{Boolean indicating if regression summary statistics should be
displayed.}

\item{stat.size}{Text size of stats output in plot.}

\item{loess.d}{A list of arguments passed to the \code{loess.smooth}
function. A robust loess is used by default.}

\item{rlm.d}{A list of arguments passed to the \code{MASS::rlm}
function.}

\item{...}{Not used.}
}
\value{
Returns a list of class \code{eda_lm}. Output includes the following
if \code{reg = TRUE}. Returns \code{NULL} otherwise.

\itemize{
\item \code{residuals}: Regression model residuals
\item \code{a}: Intercept
\item \code{b}: Polynomial coefficient(s)
\item \code{fitted.values}: Fitted values}
}
\description{
\code{eda_lm} generates a scatter plot with a fitted regression
line. A loess line can  also be added to the plot for model comparison. The
axes are scaled such that their respective standard  deviations match axes
unit length.
}
\details{
The function will plot a regression line and, if requested, a loess
fit. The function adopts the least squares fitting technique by default. It
defaults to a first order polynomial fit. The polynomial order can be
specified via the \code{poly} argument.
\cr\cr
The plot displays the +/- 1 standard deviations as dashed lines. In
theory, if both x and y values follow a perfectly Normal distribution,
roughly 68 percent of the points should fall in between these lines.
\cr \cr
The true 68 percent of values can be displayed as a shaded region by
setting \code{q=TRUE}. It uses the \code{quantile} function to compute
the upper and lower bounds defining the inner 68 percent of values. If the
data follow a Normal distribution, the grey rectangle edges should coincide
with the +/- 1SD dashed lines.
If you wish to show the interquartile ranges (IQR) instead of the inner
68 percent of values, simply set \code{inner = 0.5)}.
\cr \cr
The plot has the option to re-express the values via the \code{px} and
\code{py} arguments. But note that if the re-expression produces \code{NaN}
values (such as if a negative value is logged) those points will be
removed from the plot. This will result in fewer observations being
plotted. If observations are removed as result of a re-expression a
warning message will be displayed in the console.
The re-expression powers are shown in the upper right side of the plot. To
suppress the display of the re-expressions set \code{show.par = FALSE}.
\cr\cr
If the \code{robust} argument is set to TRUE, \code{MASS}'s
built-in robust fitting model, \code{rlm}, is used to fit the regression
line to the data. \code{rlm} arguments can be passed as a list via the
\code{rlm.d} argument.
}
\examples{

# Add a regular (OLS) regression model and loess smooth to the data
eda_lm(mtcars, wt, mpg, loe = TRUE)

# Add the inner 68\% quantile to compare the true 68\% of data to the SD
eda_lm(mtcars, wt, mpg, loe = TRUE, q = TRUE)

# Show the IQR box
eda_lm(mtcars, wt, mpg, loe = TRUE, q = TRUE, sd = FALSE, inner = 0.5)

# Fit an OLS to income for Female vs Male
df2 <- read.csv("https://mgimond.github.io/ES218/Data/Income_education.csv")
eda_lm(df2, x=B20004013, y = B20004007, xlab = "Female", ylab = "Male",
            loe = TRUE)

# Add the inner 68\% quantile to compare the true 68\% of data to the SD
eda_lm(df2, x = B20004013, y = B20004007, xlab = "Female", ylab = "Male",
            q = TRUE)

# Apply a transformation to x and y axes: x -> 1/3 and y -> log
eda_lm(df2, x = B20004013, y = B20004007, xlab = "Female", ylab = "Male",
            px = 1/3, py = 0, q = TRUE, loe = TRUE)

# Fit a second order polynomial
eda_lm(mtcars, hp, mpg, poly = 2)

# Fit a robust regression model
eda_lm(mtcars, hp, mpg, robust = TRUE, poly = 2)
}
\seealso{
\code{\link[graphics]{plot}} and \code{\link[stats]{loess.smooth}}
functions
}
