% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_symnorm.R
\name{eda_symnorm}
\alias{eda_symnorm}
\title{Symmetric Normal distribution plot}
\usage{
eda_symnorm(
  dat,
  x = NULL,
  grp = NULL,
  p = 1,
  tukey = FALSE,
  show.par = TRUE,
  alpha = 0.3,
  grey = 0.7,
  pch = 16,
  p.col = "grey50",
  p.fill = "grey80",
  size = 1,
  col.ends = "grey90",
  col.mid = "bisque",
  xlab = NULL,
  ylab = NULL,
  t.size = 1.5,
  title = "Normal characterization",
  ...
)
}
\arguments{
\item{dat}{Data frame or single vector element}

\item{x}{Column of values}

\item{grp}{Column of grouping variables}

\item{p}{Power transformation to apply to input values}

\item{tukey}{Boolean determining if a Tukey transformation should be adopted
(FALSE adopts a Box-Cox transformation)}

\item{show.par}{Boolean determining if power transformation value should
be displayed on plot.}

\item{alpha}{Point transparency (0 = transparent <-> 1 = opaque). Only
applicable if \code{rgb()} is not used to define point colors.}

\item{grey}{Grey level to apply to plot elements (0 to 1 with 1 = black)}

\item{pch}{Point symbol type}

\item{p.col}{Color for point symbol.}

\item{p.fill}{Point fill color passed to \code{bg} (Only used for \code{pch}
ranging from 21-25).}

\item{size}{Point size (0-1)}

\item{col.ends}{Fill color for ends of distribution (beyond +/- 1SD)}

\item{col.mid}{Fill color for middle of distribution (within +/- 1SD)}

\item{xlab}{X label for output plot}

\item{ylab}{Y label for output plot}

\item{t.size}{Title size}

\item{title}{Title to display above the plot}

\item{...}{Not used}
}
\value{
Does not return a value.
}
\description{
\code{eda_symnorm} generates mirrored Normal distribution plots
  of the data. Its purpose is to compare batches of values as seen from a
  Normal approximation lens. These plots are better suited than a traditional
  boxplot when paired with a parametric test such as a t-test or an ANOVA given
  that such tests use the Normal approximation to characterize the shape of the
  distribution.
}
\details{
This function will generate Normal distribution plots for each batch.
         The plots are mirrored to mimic the look of a violin plot. But it's
         important to note that this plot characterizes the distribution following
         a Normal (Gaussian) distribution using the batch standard deviation
         and its mean--nothing else. \cr
         \cr
         The plots are colored based on the part that falls between +/- 1
         standard deviation (bisque color by default) and the part that falls
         outside of it (light grey by default. The plot also adds the mean
         This plot serves a few purposes:
       \itemize{
        \item As a pedagogical tool to show when a Normal distribution may not
              be a good characterization of the data's distribution.
        \item To be used as a companion plot to a parametric test that
              characterizes the distribution as being Normal (as opposed to a
              traditional boxplot that uses quantiles to characterize the shape
              of a distribution). }
}
\examples{

# Here's an example of a dataset that can be well approximated by
# a normal distribution
# First, a boxplot of the data
eda_boxls(iris, Sepal.Length, Species) # Check with boxplot
# Now, a Normal characterization of the data
eda_symnorm(iris, Sepal.Length, Species)

# Create a skewed dataset (i.e. one not well approximated by a normal
# distribution)
set.seed(540)
dat <- data.frame(value = rbeta(100, 1, 15),
                  grp = sample(letters[1:3], 100, replace = TRUE))
# The skewness is obvious in the following boxplots
eda_boxls(dat, value, grp)

# The Normal approximation of the data artificially inflates the lower range
# of values. In fact, very few observations fall below -1 standard deviation!
eda_symnorm(dat, value, grp)

# The function allows for a re-expression of the values. Here, we'll
# adopt a Box-Cox power transformation of 0.1
eda_boxls(dat, value, grp, p = 0.1)  # Looks better
eda_symnorm(dat, value, grp, p = 0.1)
}
