% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eda_boxls.R
\name{eda_boxls}
\alias{eda_boxls}
\title{Boxplots equalized by level and spread}
\usage{
eda_boxls(
  dat,
  x,
  fac,
  p = 1,
  tukey = FALSE,
  outlier = TRUE,
  out.txt = NULL,
  type = "none",
  notch = FALSE,
  horiz = FALSE,
  xlab = NULL,
  ylab = NULL,
  grey = 0.6,
  fill = "grey70",
  boxcol = NULL,
  outcol = "grey40",
  whiskcol = "grey40",
  medcol = "grey40",
  reorder = TRUE,
  reorder.stat = "median",
  show.par = TRUE
)
}
\arguments{
\item{dat}{Dataframe.}

\item{x}{Continuous variable.}

\item{fac}{Categorical variable.}

\item{p}{Power transformation to apply to the continuous variable.}

\item{tukey}{Boolean determining if a Tukey transformation should be adopted
(FALSE adopts a Box-Cox transformation).}

\item{outlier}{Boolean indicating if outliers should be plotted.}

\item{out.txt}{Column whose values are to be used to label outliers. If
set to \code{NULL} (the default), the record number is displayed.}

\item{type}{Plot type. "none" = no equalization ; "l" = equalize by level;
"ls" = equalize by both level and spread.}

\item{notch}{Boolean determining if notches should be added.}

\item{horiz}{plot horizontally (TRUE) or vertically (FALSE).}

\item{xlab}{X label for output plot.}

\item{ylab}{Y label for output plot.}

\item{grey}{Grey level to apply to plot elements (0 to 1 with 1 = black).}

\item{fill}{Boxplot fill color.}

\item{boxcol}{Boxplot outline color.}

\item{outcol}{Outlier color.}

\item{whiskcol}{Whisker line color.}

\item{medcol}{Median line color.}

\item{reorder}{Boolean determining if factors have to be reordered based
on median, upper quartile or lower quartile (set in \code{reorder.type}).}

\item{reorder.stat}{Statistic to reorder level by if \code{reorder} is set to
\code{TRUE}. Either \code{"median"}, \code{"upper"} (for upper quartile) or
\code{"lower"} (for lower quartile). If \code{type} is set to a value other
than \code{"none"}, the this argument is ignored and the stat defaults to
\code{"median"}.}

\item{show.par}{Boolean determining if power transformation should be
displayed in the plot.}
}
\value{
{No values are returned}
}
\description{
\code{eda_boxls} creates boxplots conditioned on a categorical
  variable while providing the option to level the data or equalize the spreads.
}
\details{
\itemize{
  \item By default, the boxplots are re-ordered by their median values.
  \item If the outlier text to be displayed is its own value, it will not be
   modified if the data are equalized by level or spread.
  \item Note that the notch offers a 95 percent test of the null that the true
  medians are equal assuming that the distribution of each batch is
  approximately normal. If the notches do not overlap, we can assume that
  medians are significantly different at a 0.05 level. Note that the notches
  do not correct for multiple comparison issues when three or more batches are
  plotted.}
}
\examples{

# A basic boxplot. The outlier is labeled with the row number by default.
eda_boxls(mtcars,mpg, cyl, type="none")

# A basic boxplot. The outlier is labeled with its own value.
eda_boxls(mtcars,mpg, cyl, type="none", out.txt=mpg )

# Boxplot equalized by level. Note that the outlier text is labeled with its
# original value.
eda_boxls(mtcars,mpg, cyl, type="l", out.txt=mpg )

# Boxplots equalized by level and spread
eda_boxls(mtcars,mpg, cyl, type="ls", out.txt=mpg )

# Hide outlier
eda_boxls(mtcars,mpg, cyl, type="ls", out.txt=mpg , outlier=FALSE)

# Equalizing level helps visualize increasing spread with increasing
# median value
eda_boxls(iris, Sepal.Length, Species, type = "l",  out.txt=Sepal.Length)

# For long factor level names, flip plot
eda_boxls(iris, Sepal.Length, Species, out.txt=Sepal.Length , horiz = TRUE)

# By default, plots are ordered by their medians.
singer <- lattice::singer
eda_boxls(singer, height, voice.part, out.txt=height, horiz = TRUE)

# To order by top quartile, set reorder.stat to "upper"
eda_boxls(singer, height, voice.part, out.txt=height, horiz = TRUE,
          reorder.stat = "upper")
}
